// src/category/entities/post-category.entity.ts
// 포스팅 카테고리 엔티티

import { Column, Entity, PrimaryGeneratedColumn, OneToMany, ManyToOne, JoinColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';
import { Project } from '@projects/entities/project.entity';

@Entity({ name: 'project_category' })
export class ProjectCategory {
    @PrimaryGeneratedColumn({
        type: 'integer',
        name: 'id',
    })
    id: number;

    @Column({
        type: 'varchar',
        name: 'code',
        length: 255,
        nullable: false,
        unique: true,
    })
    code: string;

    @Column({
        type: 'varchar',
        name: 'name',
        length: 255,
        nullable: false,
    })
    name: string;

    @Column({
        type: 'text',
        name: 'description',
        nullable: true,
    })
    description: string;
    
    @Column({
        type: 'integer',
        name: 'parent_id',
        nullable: true,
    })
    parentId: number;

    @Column({
        type: 'integer',
        name: 'depth',
        default: 0,
    })
    depth: number;

    @Column({
        type: 'varchar',
        name: 'path',
        length: 255,
        nullable: true,
    })
    path: string;

    @ManyToOne(() => ProjectCategory, category => category.children, {
        onDelete: 'SET NULL'
    })
    @JoinColumn({ name: 'parent_id' })
    parent: ProjectCategory;

    @OneToMany(() => ProjectCategory, category => category.parent)
    children: ProjectCategory[];

    @OneToMany(() => Project, (project) => project.category)
    projects: Project[];
    
    @Column({
        type: 'integer',
        name: 'display_order',
        default: 0,
    })
    displayOrder: number;
    
    @Column({
        type: 'boolean',
        name: 'is_active',
        default: true,
    })
    isActive: boolean;
    
    @CreateDateColumn({
        type: 'timestamp',
        name: 'created_at',
    })
    createdAt: Date;
    
    @UpdateDateColumn({
        type: 'timestamp',
        name: 'updated_at',
    })
    updatedAt: Date;
}